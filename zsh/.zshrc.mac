#Mac用、zshrc

######################################
# Color
#######################################
# 色の設定

# 色づけ
alias ls='ls -G'
# export LSCOLORS=exfxfxdxbxegedabagacad

# android sdk(Mac)
export PATH=$PATH:/Users/takunoko/Library/Android/sdk/platform-tools
export PATH=$PATH:/Users/takunoko/Library/Android/sdk/build-tools/25.0.0
# MeshLabへのパス
# meshlabserverがコマンドラインmeshlabとなる
export PATH=$PATH:/Applications/meshlab.app/Contents/MacOS
# ParaViewへのパス
# pvpythonでpythonのシェルが立ち上がる
export PATH=$PATH:/Applications/paraview.app/Contents/bin

# Python関連の設定
export PYENV_ROOT="${HOME}/.pyenv"
if [ -d "${PYENV_ROOT}" ]; then
	export PATH=${PYENV_ROOT}/bin:$PATH
	eval "$(pyenv init -)"
fi

# デフォルトのpythonバージョンを指定
# minicondaはライブラリとかナシの純粋にpythonのみanacondaはいろいろ全部入ってるみたい。
# pyenv shell miniconda3-3.7.0
# pyenv shell 3.4.3
pyenv shell anaconda3-2.1.0

# boot2dockerの設定
# いろんな環境で同じ仮想マシーンを構築するためのツール?みたいな
export DOCKER_CERT_PATH=/Users/takunoko/.boot2docker/certs/boot2docker-vm
export DOCKER_TLS_VERIFY=1
export DOCKER_HOST=tcp://192.168.59.103:2376

# erutaso
export PATH=$PATH:$HOME/Develop/test/sl
# vimをbrewで入れたvim優先にする
PATH=/usr/local/bin/vim:$PATH

# OpenMIP
export MANPATH=$MANPATH:$HOME/Mybin/bin/share/man
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/Mybin/bin/lib
export PATH=$PATH:$HOME/Mybin/bin

# GOの設定
if type go 2>/dev/null 1>/dev/null
then
    export GOROOT=/usr/local/opt/go/libexec
    export GOPATH=$HOME/Mybin/go-local
    # GOPATHにはGoからインストールした実行ファイルとかが置かれたりするらしい
    export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
fi

# nvmの代わりにいれたnodebrewの設定。
# もしかしたら、補完とかがきかなくなってるかも
export PATH=$HOME/.nodebrew/current/bin:$PATH
export NODEBREW_ROOT=$HOME/.nodebrew

# nvm設定
# デフォで読み込みをいれるととても重いからヤダ。
# nvm実行時にのみnvmを読み込むようにする。
# nvm() {
#     unset -f nvm
#
#     [[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # nvmの補完がきくようにするもの
#     nvm use default
#     npm_dir=${NVM_PATH}_modules
#     source ~/.nvm/nvm.sh
# }

# 初めてnvmの補完を実行するまで読み込みを遅延する
# function _nvm_completion() {
#     unset _nvm_completion
#     complete -r nvm
#     if [[ -f ~/.nvm/bash_completion ]]; then
#         . ~/.nvm/bash_completion && return 124
#     fi
# }
# complete -F _nvm_completion nvm
#
# PATH=${NVM_DIR:-$HOME/.nvm}/default/bin:$PATH
# MANPATH=${NVM_DIR:-$HOME/.nvm}/default/share/man:$MANPATH
# export NODE_PATH=$npm_dir

# 古い設定
# [[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh
# nvm use default
# npm_dir=${NVM_PATH}_modules
# export NODE_PATH=$npm_dir
# source ~/.nvm/nvm.sh
