#Mac用、zshrc

######################################
# Color
#######################################
# 色の設定

# 色づけ
alias ls='ls -G'
# export LSCOLORS=exfxfxdxbxegedabagacad

# android sdk(Mac)
export PATH=$PATH:/Users/takunoko/Library/Android/sdk/platform-tools
export PATH=$PATH:/Users/takunoko/Library/Android/sdk/build-tools/25.0.0

# Python関連の設定
export PYENV_ROOT="${HOME}/.pyenv"
if [ -d "${PYENV_ROOT}" ]; then
	export PATH=${PYENV_ROOT}/bin:$PATH
	eval "$(pyenv init -)"
fi

# デフォルトのpythonバージョンを指定
# minicondaはライブラリとかナシの純粋にpythonのみanacondaはいろいろ全部入ってるみたい。
# pyenv shell miniconda3-3.7.0
# pyenv shell 3.4.3
pyenv shell anaconda3-5.0.1

# erutaso
export PATH=$PATH:$HOME/Develop/test/sl
# vimをbrewで入れたvim優先にする
PATH=/usr/local/bin/vim:$PATH

# nvmの代わりにいれたnodebrewの設定。
# もしかしたら、補完とかがきかなくなってるかも
export PATH=$HOME/.nodebrew/current/bin:$PATH
export NODEBREW_ROOT=$HOME/.nodebrew

# nvm設定
# デフォで読み込みをいれるととても重いからヤダ。
# nvm実行時にのみnvmを読み込むようにする。
# nvm() {
#     unset -f nvm
#
#     [[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # nvmの補完がきくようにするもの
#     nvm use default
#     npm_dir=${NVM_PATH}_modules
#     source ~/.nvm/nvm.sh
# }

# 初めてnvmの補完を実行するまで読み込みを遅延する
# function _nvm_completion() {
#     unset _nvm_completion
#     complete -r nvm
#     if [[ -f ~/.nvm/bash_completion ]]; then
#         . ~/.nvm/bash_completion && return 124
#     fi
# }
# complete -F _nvm_completion nvm
#
# PATH=${NVM_DIR:-$HOME/.nvm}/default/bin:$PATH
# MANPATH=${NVM_DIR:-$HOME/.nvm}/default/share/man:$MANPATH
# export NODE_PATH=$npm_dir

# helixのコンパイル環境パス
export PATH="/usr/local/opt/avr-gcc@7/bin:$PATH"

###########
# AWS関連 #
###########
# awsコマンドパス
export PATH="/usr/local/aws-cli:$PATH"
# awsのリージョン
export AWS_DEFAULT_REGION='ap-northeast-1'
